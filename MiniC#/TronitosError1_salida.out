
 Token: RESERVED WORD: interface.

 Token: IDENTIFIER: Parser.

 Token: {.

 Token: RESERVED WORD: int.

 Token: IDENTIFIER: f1.

 Token: (.

 Token: RESERVED WORD: int.

 Token: IDENTIFIER: x.

 Token: ,.

 Token: RESERVED WORD: double.

 Token: IDENTIFIER: y.

 Token: ,.

 Token: RESERVED WORD: string.

 Token: IDENTIFIER: z.

 Token: ).

 Token: ;.

 Token: RESERVED WORD: void.

 Token: IDENTIFIER: proc1.

 Token: (.

 Token: RESERVED WORD: double.

 Token: IDENTIFIER: y.

 Token: ).

 Token: ;.

 Token: {.

 Token: }.

 Token: }.

 Token: RESERVED WORD: void.

 Token: IDENTIFIER: main.

 Token: (.

 Token: ).

 Token: {.

 Token: RESERVED WORD: int.

 Token: IDENTIFIER: m1.

 Token: ;.

 Token: RESERVED WORD: int.

 Token: IDENTIFIER: m2.

 Token: ;.

 Token: IDENTIFIER: Parser.

 Token: IDENTIFIER: MyParser.

 Token: ;.

 Token: IDENTIFIER: m1.

 Token: =.

 Token: IDENTIFIER: MyParser.

 Token: ..

 Token: IDENTIFIER: f1.

 Token: (.

 Token: 1.

 Token: ,.

 Token: DOUBLE: 2.2.

 Token: ,.

 Token: "3".

 Token: ).

 Token: ;.

 Token: RESERVED WORD: while.

 Token: (.

 Token: IDENTIFIER: m1.

 Token: >=.

 Token: 20.

 Token: ).

 Token: {.

 Token: RESERVED WORD: for.

 Token: (.

 Token: IDENTIFIER: m2.

 Token: =.

 Token: IDENTIFIER: f1.

 Token: (.

 Token: 1.

 Token: ,.

 Token: DOUBLE: 2.2.

 Token: ,.

 Token: "3".

 Token: ).

 Token: ;.

 Token: IDENTIFIER: m2.

 Token: =.

 Token: IDENTIFIER: m2.

 Token: +.

 Token: 1.

 Token: ;.

 Token: (.

 Token: 2.

 Token: ).

 Token: ).

 Token: }.

 Token: RESERVED WORD: Print.

 Token: (.

 Token: RESERVED WORD: this.

 Token: ..

 Token: IDENTIFIER: m2.

 Token: +.

 Token: 10.

 Token: ).

 Token: ;.

 Token: RESERVED WORD: if.

 Token: (.

 Token: IDENTIFIER: m2.

 Token: !=.

 Token: IDENTIFIER: m1.

 Token: &&.

 Token: true.

 Token: ).

 Token: {.

 Token: RESERVED WORD: string.

 Token: IDENTIFIER: p1.

 Token: ;.

 Token: IDENTIFIER: p1.

 Token: =.

 Token: "This is a string".

 Token: ;.

 Token: }.

 Token: RESERVED WORD: else.

 Token: RESERVED WORD: Malloc.

 Token: (.

 Token: 25.

 Token: ).

 Token: ;.

 Token: }.
EOF